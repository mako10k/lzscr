name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
  schedule:
    - cron: '0 3 * * 1' # weekly sanity (audit/deny)
permissions:
  contents: read
  checks: write

jobs:
  build:
    name: Build & Test (Rust)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt

      - name: Cache cargo
        uses: Swatinem/rust-cache@v2

      - name: Cargo fmt
        run: cargo fmt --all -- --check

      - name: Cargo clippy
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: Cargo build
        run: cargo build --workspace --all-features --verbose

      - name: Cargo test
        run: cargo test --workspace --all-features --verbose

  vsix:
    name: Build VSIX (VS Code extension)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Detect extension workspace
        id: detect
        run: |
          if [ -f extensions/lzscr-vscode/package.json ]; then
            echo "exists=true" >> "$GITHUB_OUTPUT"
          else
            echo "exists=false" >> "$GITHUB_OUTPUT"
          fi
      - name: Setup Node.js
        uses: actions/setup-node@v4
        if: ${{ steps.detect.outputs.exists == 'true' }}
        with:
          node-version: '20'
      - name: Install dependencies
        if: ${{ steps.detect.outputs.exists == 'true' }}
        run: npm ci
        working-directory: extensions/lzscr-vscode
      - name: Package VSIX
        if: ${{ steps.detect.outputs.exists == 'true' }}
        run: npm run package
        working-directory: extensions/lzscr-vscode
      - name: Upload VSIX artifact
        uses: actions/upload-artifact@v4
        if: ${{ steps.detect.outputs.exists == 'true' }}
        with:
          name: lzscr-vscode-vsix
          path: extensions/lzscr-vscode/*.vsix

  audit:
    name: Security audit (cargo-audit)
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v5
      - name: Install Rust (minimal)
        uses: dtolnay/rust-toolchain@stable
      - name: Cache cargo
        uses: Swatinem/rust-cache@v2
      - name: Install cargo-audit
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-audit
      - name: Run cargo audit
        run: cargo audit -q

  deny:
    name: License/Advisory check (cargo-deny)
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v5
      - name: Run cargo-deny
        uses: EmbarkStudios/cargo-deny-action@v2

  coverage:
    name: Coverage (tarpaulin)
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v5
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
      - name: Cache cargo
        uses: Swatinem/rust-cache@v2
      - name: Install tarpaulin
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-tarpaulin
      - name: Run coverage (tarpaulin)
        run: cargo tarpaulin --workspace --out Xml
      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: cobertura.xml

  udeps:
    name: Unused deps (cargo-udeps)
    if: ${{ github.event_name != 'pull_request' }}
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v5
      - name: Install Rust
        uses: dtolnay/rust-toolchain@nightly
      - name: Cache cargo
        uses: Swatinem/rust-cache@v2
      - name: Install cargo-udeps (nightly)
        run: cargo +nightly install cargo-udeps --locked
      - name: Run cargo udeps
        run: cargo +nightly udeps --all-targets --all-features
